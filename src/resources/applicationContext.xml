<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-lazy-init="true">
    <description>spring公共配置</description>

    <!-- 使用annotation自动注入bean -->
    <context:component-scan base-package="org.jonyframework.examples.demo">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="org.jonyframework.examples.demo"/>
        <property name="jpaProperties">
            <props>
                <!-- 命名规则 My_NAME->MyName -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
            </props>
        </property>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform">
            <bean factory-method="getDialect" class="org.jonyframework.persistence.Hibernates">
                <constructor-arg ref="dataSource"/>
            </bean>
        </property>
    </bean>

    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="org.jonyframework.examples.demo"
                      transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>

    <!-- Jpa 事务配置 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <!-- JSR303 Validator定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

    <!-- 上传拦截，如最大上传值及最小上传值 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="1000000" />
    </bean>

    <!-- production环境 -->
    <!--<beans profile="production">-->
        <!--<context:property-placeholder ignore-unresolvable="true"-->
                                      <!--location="classpath*:/application.properties" />-->

        <!--&lt;!&ndash; 数据源配置, 使用DBCP数据库连接池 &ndash;&gt;-->
        <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
            <!--&lt;!&ndash; Connection Info &ndash;&gt;-->
            <!--<property name="driverClassName" value="${jdbc.driver}" />-->
            <!--<property name="url" value="${jdbc.url}" />-->
            <!--<property name="username" value="${jdbc.username}" />-->
            <!--<property name="password" value="${jdbc.password}" />-->

            <!--&lt;!&ndash; Connection Pooling Info &ndash;&gt;-->
            <!--<property name="maxActive" value="${dbcp.maxActive}" />-->
            <!--<property name="maxIdle" value="${dbcp.maxIdle}" />-->
            <!--<property name="defaultAutoCommit" value="false" />-->
            <!--&lt;!&ndash; 连接Idle一个小时后超时 &ndash;&gt;-->
            <!--<property name="timeBetweenEvictionRunsMillis" value="3600000" />-->
            <!--<property name="minEvictableIdleTimeMillis" value="3600000" />-->
        <!--</bean>-->

        <!--&lt;!&ndash; 数据源配置,使用应用服务器的数据库连接池 &ndash;&gt;-->
        <!--&lt;!&ndash;<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />&ndash;&gt;-->
    <!--</beans>-->

    <!-- local development环境 -->
    <!--<beans profile="development">-->
        <!--<context:property-placeholder ignore-resource-not-found="true"-->
                                      <!--location="classpath*:/application.properties,-->
          			  <!--classpath*:/application.development.properties" />-->

        <!-- DBCP连接池 -->
        <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
            <!--<context:property-placeholder ignore-resource-not-found="true"-->
                                          <!--location="classpath*:/application.properties,-->
          			  <!--classpath*:/application.development.properties" />-->
            <!--<property name="driverClassName" value="${jdbc.driver}" />-->
            <!--<property name="url" value="${jdbc.url}" />-->
            <!--<property name="username" value="${jdbc.username}" />-->
            <!--<property name="password" value="${jdbc.password}" />-->
            <!--<property name="defaultAutoCommit" value="false" />-->
        <!--</bean>-->
        <!-- 初始化数据库表结构 -->

    <!--</beans>-->

    <!-- functional test 环境 -->
    <beans profile="functional">
        <context:property-placeholder ignore-resource-not-found="true"
                                      location="classpath*:/application.properties" />

        <!-- DBCP连接池 -->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="${jdbc.driver}" />
            <property name="url" value="${jdbc.url}" />
            <property name="username" value="${jdbc.username}" />
            <property name="password" value="${jdbc.password}" />
            <property name="defaultAutoCommit" value="false" />
        </bean>

        <!-- 初始化数据表结构 -->
        <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
            <jdbc:script location="classpath:sql/mysql/schema.sql" />
        </jdbc:initialize-database>
    </beans>

    <!--&lt;!&ndash; unit test环境 &ndash;&gt;-->
    <!--<beans profile="test">-->
        <!--<context:property-placeholder ignore-resource-not-found="true"-->
                                      <!--location="classpath*:/application.properties,-->
          			  <!--classpath*:/application.test.properties" />-->

        <!--&lt;!&ndash; Simple连接池 &ndash;&gt;-->
        <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">-->
            <!--<property name="driverClass" value="${jdbc.driver}" />-->
            <!--<property name="url" value="${jdbc.url}" />-->
            <!--<property name="username" value="${jdbc.username}" />-->
            <!--<property name="password" value="${jdbc.password}" />-->
        <!--</bean>-->

        <!--&lt;!&ndash; 初始化数据表结构 与默认数据&ndash;&gt;-->
        <!--<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">-->
            <!--<jdbc:script location="classpath:sql/h2/schema.sql" />-->
            <!--<jdbc:script location="classpath:data/import-data.sql" encoding="UTF-8"/>-->
        <!--</jdbc:initialize-database>-->
    <!--</beans>-->
</beans>